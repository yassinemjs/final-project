[{"C:\\Users\\pc\\Desktop\\project\\client\\src\\store.js":"1","C:\\Users\\pc\\Desktop\\project\\client\\src\\index.js":"2","C:\\Users\\pc\\Desktop\\project\\client\\src\\App.js":"3","C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\types.js":"4","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\forms\\Login.js":"5","C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\alert.js":"6","C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\auth.js":"7","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\layout\\NavBar.js":"8","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\layout\\Alert.js":"9","C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\auth.js":"10","C:\\Users\\pc\\Desktop\\project\\client\\src\\utils\\setAuthToken.js":"11","C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\alert.js":"12","C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\prof.js":"13","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\Filter.js":"14","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\AddEns.js":"15","C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\prof.js":"16","C:\\Users\\pc\\Desktop\\project\\client\\src\\routing\\PrivateRoute.js":"17","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\EnsList.js":"18","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\EnsCard.js":"19","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\forms\\ModalEns.js":"20","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\Update.js":"21"},{"size":545,"mtime":1610481313302,"results":"22","hashOfConfig":"23"},{"size":422,"mtime":1610998696469,"results":"24","hashOfConfig":"23"},{"size":1463,"mtime":1611605041038,"results":"25","hashOfConfig":"23"},{"size":847,"mtime":1611597051501,"results":"26","hashOfConfig":"23"},{"size":1944,"mtime":1611076087775,"results":"27","hashOfConfig":"23"},{"size":391,"mtime":1610631914956,"results":"28","hashOfConfig":"23"},{"size":984,"mtime":1610488410850,"results":"29","hashOfConfig":"23"},{"size":3027,"mtime":1611258565155,"results":"30","hashOfConfig":"23"},{"size":461,"mtime":1610481313290,"results":"31","hashOfConfig":"23"},{"size":1297,"mtime":1611076087779,"results":"32","hashOfConfig":"23"},{"size":253,"mtime":1611076087789,"results":"33","hashOfConfig":"23"},{"size":353,"mtime":1611076087778,"results":"34","hashOfConfig":"23"},{"size":1679,"mtime":1611597880287,"results":"35","hashOfConfig":"23"},{"size":4520,"mtime":1611605404277,"results":"36","hashOfConfig":"23"},{"size":3071,"mtime":1611076087766,"results":"37","hashOfConfig":"23"},{"size":3283,"mtime":1611604613075,"results":"38","hashOfConfig":"23"},{"size":662,"mtime":1611076087787,"results":"39","hashOfConfig":"23"},{"size":1421,"mtime":1611351587833,"results":"40","hashOfConfig":"23"},{"size":17595,"mtime":1611516728808,"results":"41","hashOfConfig":"23"},{"size":6165,"mtime":1611354213685,"results":"42","hashOfConfig":"23"},{"size":1141,"mtime":1611269243322,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"2koi8m",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"C:\\Users\\pc\\Desktop\\project\\client\\src\\store.js",[],["94","95"],"C:\\Users\\pc\\Desktop\\project\\client\\src\\index.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\types.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\forms\\Login.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\alert.js",["96"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\auth.js",["97"],"import {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  admin: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        admin: payload,\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\layout\\NavBar.js",["98","99","100","101"],"import React, { Fragment, useState } from 'react';\r\nimport Logo from '../../assets/Logo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/auth';\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBIcon,\r\n} from 'mdbreact';\r\n\r\nconst NavBar = ({ auth: { isAuthenticated, loading }, logout }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleCollapse = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const authLinks = (\r\n    <MDBNavbar color='default-color' dark expand='md'>\r\n      <MDBNavbarBrand>\r\n        <img src={Logo} />\r\n      </MDBNavbarBrand>\r\n      <MDBNavbarToggler onClick={toggleCollapse} />\r\n      <MDBCollapse id='navbarCollapse3' isOpen={isOpen} navbar>\r\n        <MDBNavbarNav left>\r\n          <MDBNavItem>\r\n            <MDBNavLink to='/home'>\r\n              <MDBIcon icon='home' />\r\n              <strong>Home</strong>{' '}\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink to='/filter'>\r\n              <MDBIcon icon='filter' />\r\n              <strong>Filter</strong>\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink to='addEns'>\r\n              <MDBIcon far icon='plus-square' />\r\n              <strong>Add Enseignant</strong>\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink to='/update'>\r\n              <MDBIcon far icon='edit' />\r\n              <strong>Update</strong>\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n          <MDBNavItem>\r\n            <MDBNavLink to='#!'>\r\n              <MDBIcon icon='file-signature' />\r\n              <strong>Posts</strong>\r\n            </MDBNavLink>\r\n          </MDBNavItem>\r\n        </MDBNavbarNav>\r\n        <MDBNavbarNav right>\r\n          <a onClick={logout}>\r\n            <i class='fas fa-sign-out-alt'></i>\r\n            <strong>Logout</strong>{' '}\r\n          </a>\r\n        </MDBNavbarNav>\r\n      </MDBCollapse>\r\n    </MDBNavbar>\r\n  );\r\n\r\n  const guestLinks = (\r\n    <MDBNavbar color='default-color' dark expand='md'>\r\n      <MDBNavbarBrand>\r\n        <img src={Logo} />\r\n      </MDBNavbarBrand>\r\n      <MDBNavbarToggler onClick={toggleCollapse} />\r\n      <MDBCollapse id='navbarCollapse3' isOpen={isOpen} navbar>\r\n        <MDBNavbarNav right>\r\n          <MDBNavLink to='/login'>\r\n            <MDBIcon icon='user' />\r\n            <strong>Login</strong>{' '}\r\n          </MDBNavLink>\r\n        </MDBNavbarNav>\r\n      </MDBCollapse>\r\n    </MDBNavbar>\r\n  );\r\n\r\n  return (\r\n    !loading && <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(NavBar);\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\layout\\Alert.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\auth.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\alert.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\reducers\\prof.js",["102","103","104","105","106"],"import {\r\n  ENS_ERROR,\r\n  ADD_ENS,\r\n  UPDATE_ENS,\r\n  GET_TEACHERS,\r\n  GET_TEACHER,\r\n  FILTER_GRADE,\r\n  FILTER_LEVEL,\r\n  FILTER_SITUATION,\r\n  FILTER_SPECIALITY,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  teachers: [],\r\n  teacher: null,\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_ENS:\r\n    case UPDATE_ENS:\r\n      return {\r\n        ...state,\r\n        teachers: [...state.teachers, payload],\r\n        loading: false,\r\n      };\r\n    case GET_TEACHERS:\r\n      return { ...state, teachers: payload, loading: false };\r\n    case GET_TEACHER:\r\n      return { ...state, loading: false, teacher: payload };\r\n    case ENS_ERROR:\r\n      return { loading: false, error: payload };\r\n    case FILTER_GRADE:\r\n      return {\r\n        ...state,\r\n        teachers: state.teachers\r\n          .filter((el) => el.grade != null)\r\n          .filter((el) => el.grade._id == payload),\r\n      };\r\n    case FILTER_SITUATION:\r\n      return {\r\n        ...state,\r\n        teachers: state.teachers\r\n          .filter((el) => el.situation != null)\r\n          .filter((el) => el.situation._id == payload),\r\n      };\r\n    case FILTER_LEVEL:\r\n      return {\r\n        ...state,\r\n        teachers: state.teachers\r\n          .filter((el) => el.level != null)\r\n          .filter((el) => el.level._id == payload),\r\n      };\r\n    case FILTER_SPECIALITY:\r\n      return {\r\n        ...state,\r\n        teachers: state.teachers\r\n          .filter((el) => el.speciality != null)\r\n          .filter((el) => el.speciality._id == payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\Filter.js",["107","108","109","110","111","112","113"],"C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\AddEns.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\actions\\prof.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\routing\\PrivateRoute.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\EnsList.js",["114"],"import React, { useState, useEffect } from 'react';\r\nimport EnsCard from './EnsCard';\r\n\r\nimport ReactPaginate from 'react-paginate';\r\nimport axios from 'axios';\r\n\r\nconst EnsList = () => {\r\n  const [offset, setOffset] = useState(0);\r\n  const [data, setData] = useState([]);\r\n  const [perPage] = useState(5);\r\n  const [pageCount, setPageCount] = useState(0);\r\n\r\n  const getData = async () => {\r\n    const res = await axios.get('/api/prof/all');\r\n    const data = res.data;\r\n    const slice = data.slice(offset, offset + perPage);\r\n    const postData = slice.map((teacher) => (\r\n      <EnsCard key={teacher._id} prof={teacher} />\r\n    ));\r\n    setData(postData);\r\n    setPageCount(Math.ceil(data.length / perPage));\r\n  };\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setOffset(selectedPage + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [offset]);\r\n\r\n  return (\r\n    <div className='App'>\r\n      {data}\r\n      <ReactPaginate\r\n        previousLabel={'prev'}\r\n        nextLabel={'next'}\r\n        breakLabel={'...'}\r\n        breakClassName={'break-me'}\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={'pagination'}\r\n        subContainerClassName={'pages pagination'}\r\n        activeClassName={'active'}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnsList;\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\EnsCard.js",["115","116"],"import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport axios from 'axios';\r\nimport { updateEns } from '../../actions/prof';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n  MDBInput,\r\n  MDBCard,\r\n  MDBIcon,\r\n  MDBCardTitle,\r\n  MDBBtn,\r\n  MDBCardImage,\r\n  MDBCardBody,\r\n  MDBContainer,\r\n  MDBModal,\r\n  MDBModalBody,\r\n  MDBModalHeader,\r\n  MDBModalFooter,\r\n  MDBRow,\r\n  MDBCol,\r\n} from 'mdbreact';\r\n\r\nconst EnsCard = ({\r\n  prof: {\r\n    _id,\r\n    id_unique,\r\n    name,\r\n    lastName,\r\n    dateOfBirth,\r\n    placeOfBirth,\r\n    cin,\r\n    sexe,\r\n    adresse,\r\n    phone,\r\n    civil_status,\r\n    children,\r\n    email,\r\n    grade,\r\n    level,\r\n    speciality,\r\n    situation,\r\n    status,\r\n    recruitement_date,\r\n  },\r\n}) => {\r\n  const [titre, setTitre] = useState([]);\r\n  const [lieu, setLieu] = useState([]);\r\n  const [etat, setEtat] = useState([]);\r\n  const [spec, setSpec] = useState([]);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({\r\n    name,\r\n    lastName,\r\n    dateOfBirth,\r\n    placeOfBirth,\r\n    cin,\r\n    sexe,\r\n    adresse,\r\n    phone,\r\n    civil_status,\r\n    children,\r\n    email,\r\n    grade,\r\n    level,\r\n    speciality,\r\n    situation,\r\n    status,\r\n    recruitement_date,\r\n  });\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateEns(_id, formData));\r\n  };\r\n  const options_civil_status = [\r\n    { value: 'Marié', label: 'Marié' },\r\n    { value: 'Célibataire', label: 'Célibataire' },\r\n    { value: 'Divorcé', label: 'Divorcé' },\r\n    { value: 'Veuf', label: 'Veuf' },\r\n  ];\r\n  const options_status = [\r\n    { value: 'عون متعاقد', label: 'عون متعاقد' },\r\n    { value: 'متربص', label: 'متربص' },\r\n    { value: 'مترسم', label: 'مترسم' },\r\n    { value: 'مترسم في انتظار القرار', label: 'مترسم في انتظار القرار' },\r\n    { value: 'تثبيت في الرتبة', label: 'تثبيت في الرتبة' },\r\n  ];\r\n\r\n  const options_sexe = [\r\n    { value: 'M', label: 'M' },\r\n    { value: 'F', label: 'F' },\r\n  ];\r\n\r\n  const toggle = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const gr = await axios.get('api/grade');\r\n    const sp = await axios.get('api/speciality');\r\n    const le = await axios.get('api/level');\r\n    const si = await axios.get('api/situation');\r\n    setTitre(gr.data);\r\n    setSpec(sp.data);\r\n    setEtat(si.data);\r\n    setLieu(le.data);\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        maxWidth: '35rem',\r\n        maxHeight: '50',\r\n        padding: '1rem',\r\n      }}\r\n    >\r\n      <MDBCard>\r\n        <div className='round-img'>\r\n          <MDBCardImage\r\n            src='https://www.bootdey.com/img/Content/avatar/avatar6.png'\r\n            alt='MDBCard image cap'\r\n            top\r\n            hover\r\n            overlay='white-slight'\r\n          />\r\n        </div>\r\n        <MDBCardBody>\r\n          <MDBCardTitle tag='h5'>{`${name} ${lastName}`}</MDBCardTitle>\r\n          <MDBListGroup className='my-4 mx-4' style={{ width: '25' }}>\r\n            <MDBListGroupItem tag='h3' className='pt-2' color='danger' hover>\r\n              <MDBIcon icon='id-card' />\r\n              {id_unique}\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem color='dark' tag='h5' hover>\r\n              <MDBIcon icon='phone-alt' />\r\n              {phone}\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem color='primary' tag='h4' hover>\r\n              <MDBIcon icon='envelope' />\r\n              {email}\r\n            </MDBListGroupItem>\r\n            <MDBListGroupItem color='primary' tag='h4' hover>\r\n              <MDBIcon icon='user-graduate' />\r\n              {!grade ? '' : grade.grade}\r\n            </MDBListGroupItem>\r\n          </MDBListGroup>\r\n        </MDBCardBody>\r\n        <MDBContainer\r\n          style={{\r\n            margin: '1rem',\r\n          }}\r\n        >\r\n          <MDBBtn onClick={toggle}>Show details && Update</MDBBtn>\r\n          <MDBModal\r\n            className='modal-dialog modal-xl'\r\n            isOpen={modal}\r\n            toggle={toggle}\r\n          >\r\n            <MDBModalHeader toggle={toggle}>ENSEIGNANT INFOS</MDBModalHeader>\r\n            <MDBModalBody>\r\n              {' '}\r\n              <form className='needs-validation' noValidate>\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterNameEx'\r\n                      className='grey-text'\r\n                    >\r\n                      First name\r\n                    </label>\r\n                    <input\r\n                      value={formData.name}\r\n                      name='name'\r\n                      onChange={onChange}\r\n                      type='text'\r\n                      id='defaultFormRegisterNameEx'\r\n                      className='form-control'\r\n                      placeholder='First name'\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Looks good!</div>\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterEmailEx2'\r\n                      className='grey-text'\r\n                    >\r\n                      Last name\r\n                    </label>\r\n                    <input\r\n                      value={formData.lastName}\r\n                      name='lastName'\r\n                      onChange={onChange}\r\n                      type='text'\r\n                      id='defaultFormRegisterEmailEx2'\r\n                      className='form-control'\r\n                      placeholder='Last name'\r\n                      required\r\n                    />\r\n                    <div className='valid-feedback'>Looks good!</div>\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterConfirmEx3'\r\n                      className='grey-text'\r\n                    >\r\n                      Email\r\n                    </label>\r\n                    <input\r\n                      value={formData.email}\r\n                      type='email'\r\n                      onChange={onChange}\r\n                      id='defaultFormRegisterConfirmEx3'\r\n                      className='form-control'\r\n                      name='email'\r\n                      placeholder='Your Email address'\r\n                    />\r\n                    <small id='emailHelp' className='form-text text-muted'>\r\n                      We'll never share your email with anyone else.\r\n                    </small>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      phone\r\n                    </label>\r\n                    <input\r\n                      value={formData.phone}\r\n                      onChange={onChange}\r\n                      type='text'\r\n                      id='defaultFormRegisterPasswordEx4'\r\n                      className='form-control'\r\n                      name='phone'\r\n                      placeholder='phone'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Adress\r\n                    </label>\r\n                    <input\r\n                      value={formData.adresse}\r\n                      onChange={onChange}\r\n                      type='text'\r\n                      id='defaultFormRegisterPasswordEx4'\r\n                      className='form-control'\r\n                      name='adresse'\r\n                      placeholder='Adress'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Civil Status\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={formData.civil_status}\r\n                      options={options_civil_status}\r\n                      onChange={(e) => {\r\n                        setFormData({ ...formData, civil_status: e.value });\r\n                      }}\r\n                    />\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      children\r\n                    </label>\r\n                    <input\r\n                      onChange={onChange}\r\n                      value={formData.children}\r\n                      type='text'\r\n                      id='defaultFormRegisterPasswordEx4'\r\n                      className='form-control'\r\n                      name='children'\r\n                      placeholder='children'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      sexe\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={formData.sexe}\r\n                      options={options_sexe}\r\n                      onChange={(e) => {\r\n                        setFormData({ ...formData, sexe: e.value });\r\n                      }}\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Date of Birth\r\n                    </label>\r\n                    <input\r\n                      type='date'\r\n                      placeholder='YYYY-MM-DD'\r\n                      value={formData.dateOfBirth}\r\n                      name='dateOfBirth'\r\n                      onChange={onChange}\r\n                      className='form-control'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Place of Birth\r\n                    </label>\r\n                    <input\r\n                      onChange={onChange}\r\n                      value={formData.placeOfBirth}\r\n                      type='text'\r\n                      id='defaultFormRegisterPasswordEx4'\r\n                      className='form-control'\r\n                      name='placeOfBirth'\r\n                      placeholder='place of birth'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <br />\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      speciality\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={\r\n                        !formData.speciality\r\n                          ? ''\r\n                          : formData.speciality.speciality\r\n                      }\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, speciality: e.value })\r\n                      }\r\n                      options={spec.map((t) => ({\r\n                        value: t._id,\r\n                        label: t.speciality,\r\n                      }))}\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      situation\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={!situation ? '' : situation.situation}\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, situation: e.value })\r\n                      }\r\n                      options={etat.map((t) => ({\r\n                        value: t._id,\r\n                        label: t.situation,\r\n                      }))}\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Grade\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={!grade ? '' : grade.grade}\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, grade: e.value })\r\n                      }\r\n                      options={titre.map((t) => ({\r\n                        value: t._id,\r\n                        label: t.grade,\r\n                      }))}\r\n                    />\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBRow>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      level\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={!level ? '' : level.level}\r\n                      onChange={(e) =>\r\n                        setFormData({ ...formData, level: e.value })\r\n                      }\r\n                      options={lieu.map((t) => ({\r\n                        value: t._id,\r\n                        label: t.leve,\r\n                      }))}\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Status\r\n                    </label>\r\n                    <Select\r\n                      defaultInputValue={formData.status}\r\n                      options={options_status}\r\n                      onChange={(e) => {\r\n                        setFormData({ ...formData, status: e.value });\r\n                      }}\r\n                    />\r\n                  </MDBCol>\r\n                  <MDBCol md='4' className='mb-3'>\r\n                    <label\r\n                      htmlFor='defaultFormRegisterPasswordEx4'\r\n                      className='grey-text'\r\n                    >\r\n                      Recruitement Date\r\n                    </label>\r\n                    <input\r\n                      type='date'\r\n                      defaultInputValue={formData.recruitement_date}\r\n                      placeholder='yyyy-mm-dd'\r\n                      name='recruitement_date'\r\n                      value={formData.recruitement_date}\r\n                      onChange={onChange}\r\n                      className='form-control'\r\n                      required\r\n                    />\r\n                  </MDBCol>\r\n                </MDBRow>\r\n                <MDBCol md='4' className='mb-3'>\r\n                  <div className='custom-control custom-checkbox pl-3'>\r\n                    <input\r\n                      className='custom-control-input'\r\n                      type='checkbox'\r\n                      value=''\r\n                      id='invalidCheck'\r\n                      required\r\n                    />\r\n                    <label\r\n                      className='custom-control-label'\r\n                      htmlFor='invalidCheck'\r\n                    >\r\n                      Agree to terms and conditions\r\n                    </label>\r\n                    <div className='invalid-feedback'>\r\n                      You must agree before submitting.\r\n                    </div>\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBBtn color='primary' onClick={onsubmit} type='submit'>\r\n                  Update prof\r\n                </MDBBtn>\r\n              </form>\r\n            </MDBModalBody>\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggle}>\r\n                Close\r\n              </MDBBtn>\r\n            </MDBModalFooter>\r\n          </MDBModal>\r\n        </MDBContainer>\r\n      </MDBCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnsCard;\r\n","C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\forms\\ModalEns.js",[],"C:\\Users\\pc\\Desktop\\project\\client\\src\\Components\\dashboard\\Update.js",["117"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllEns } from '../../actions/prof';\r\n\r\nconst Update = () => {\r\n  const dispatch = useDispatch();\r\n  const teachers = useSelector((state) => state.prof.teachers);\r\n  const loading = useSelector((state) => state.prof.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllEns());\r\n  }, [getAllEns]);\r\n\r\n  if (loading || !teachers) {\r\n    return <p>.....loading</p>;\r\n  }\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tr>\r\n          <th>Id Unique</th>\r\n          <th>name</th>\r\n          <th>lastName</th>\r\n          <th>email</th>\r\n          <th>grade</th>\r\n        </tr>\r\n        {teachers &&\r\n          teachers.map((teacher) => (\r\n            <>\r\n              <tr>\r\n                <td>{teacher.id_unique}</td>\r\n                <td>{teacher.name}</td>\r\n                <td>{teacher.lastName}</td>\r\n                <td>{teacher.email}</td>\r\n                <td>{!teacher.grade ? '' : teacher.grade.grade}</td>\r\n              </tr>\r\n            </>\r\n          ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":5,"column":1,"nodeType":"124","endLine":16,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":16,"column":1,"nodeType":"124","endLine":48,"endColumn":2},{"ruleId":"125","severity":1,"message":"126","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":28,"column":9,"nodeType":"131","endLine":28,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":65,"column":11,"nodeType":"131","endLine":65,"endColumn":31},{"ruleId":"129","severity":1,"message":"130","line":77,"column":9,"nodeType":"131","endLine":77,"endColumn":27},{"ruleId":"122","severity":1,"message":"123","line":20,"column":1,"nodeType":"124","endLine":67,"endColumn":2},{"ruleId":"134","severity":1,"message":"135","line":41,"column":40,"nodeType":"136","messageId":"137","endLine":41,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":48,"column":44,"nodeType":"136","messageId":"137","endLine":48,"endColumn":46},{"ruleId":"134","severity":1,"message":"135","line":55,"column":40,"nodeType":"136","messageId":"137","endLine":55,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":62,"column":45,"nodeType":"136","messageId":"137","endLine":62,"endColumn":47},{"ruleId":"125","severity":1,"message":"138","line":8,"column":3,"nodeType":"127","messageId":"128","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"139","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":19},{"ruleId":"125","severity":1,"message":"140","line":26,"column":10,"nodeType":"127","messageId":"128","endLine":26,"endColumn":13},{"ruleId":"125","severity":1,"message":"141","line":27,"column":10,"nodeType":"127","messageId":"128","endLine":27,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":35,"column":6,"nodeType":"144","endLine":35,"endColumn":17,"suggestions":"145"},{"ruleId":"142","severity":1,"message":"146","line":79,"column":13,"nodeType":"147","endLine":88,"endColumn":4},{"ruleId":"142","severity":1,"message":"148","line":88,"column":6,"nodeType":"144","endLine":88,"endColumn":17,"suggestions":"149"},{"ruleId":"142","severity":1,"message":"150","line":31,"column":6,"nodeType":"144","endLine":31,"endColumn":14,"suggestions":"151"},{"ruleId":"125","severity":1,"message":"152","line":9,"column":3,"nodeType":"127","messageId":"128","endLine":9,"endColumn":11},{"ruleId":"142","severity":1,"message":"146","line":105,"column":13,"nodeType":"147","endLine":114,"endColumn":4},{"ruleId":"142","severity":1,"message":"143","line":12,"column":6,"nodeType":"144","endLine":12,"endColumn":17,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'filterSituation' is defined but never used.","'filterSpeciality' is defined but never used.","'sit' is assigned a value but never used.","'spec' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'getAllEns' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["156"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has an unnecessary dependency: 'getAllEns'. Either exclude it or remove the dependency array. Outer scope values like 'getAllEns' aren't valid dependencies because mutating them doesn't re-render the component.",["157"],"React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["158"],"'MDBInput' is defined but never used.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"160","fix":"166"},"Update the dependencies array to be: [dispatch]",{"range":"167","text":"168"},"Update the dependencies array to be: []",{"range":"169","text":"170"},"Update the dependencies array to be: [getData, offset]",{"range":"171","text":"172"},{"range":"173","text":"168"},[1024,1035],"[dispatch]",[2126,2137],"[]",[880,888],"[getData, offset]",[394,405]]